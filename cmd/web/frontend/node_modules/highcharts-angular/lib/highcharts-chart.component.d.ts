import { ElementRef, EventEmitter, OnDestroy, NgZone } from '@angular/core';
import * as Highcharts from 'highcharts';
import * as ɵngcc0 from '@angular/core';
export declare class HighchartsChartComponent implements OnDestroy {
    private el;
    private _zone;
    Highcharts: typeof Highcharts;
    constructorType: string;
    callbackFunction: Highcharts.ChartCallbackFunction;
    oneToOne: boolean;
    runOutsideAngular: boolean;
    options: Highcharts.Options;
    update: boolean;
    updateChange: EventEmitter<boolean>;
    chartInstance: EventEmitter<Highcharts.Chart>;
    private chart;
    private optionsValue;
    constructor(el: ElementRef, _zone: NgZone);
    wrappedUpdateOrCreateChart(): void;
    updateOrCreateChart(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HighchartsChartComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HighchartsChartComponent, "highcharts-chart", never, {
    "options": "options";
    "update": "update";
    "Highcharts": "Highcharts";
    "constructorType": "constructorType";
    "callbackFunction": "callbackFunction";
    "oneToOne": "oneToOne";
    "runOutsideAngular": "runOutsideAngular";
}, {
    "updateChange": "updateChange";
    "chartInstance": "chartInstance";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGNoYXJ0cy1jaGFydC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiaGlnaGNoYXJ0cy1jaGFydC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0ICogYXMgSGlnaGNoYXJ0cyBmcm9tICdoaWdoY2hhcnRzJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSGlnaGNoYXJ0c0NoYXJ0Q29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcclxuICAgIHByaXZhdGUgZWw7XHJcbiAgICBwcml2YXRlIF96b25lO1xyXG4gICAgSGlnaGNoYXJ0czogdHlwZW9mIEhpZ2hjaGFydHM7XHJcbiAgICBjb25zdHJ1Y3RvclR5cGU6IHN0cmluZztcclxuICAgIGNhbGxiYWNrRnVuY3Rpb246IEhpZ2hjaGFydHMuQ2hhcnRDYWxsYmFja0Z1bmN0aW9uO1xyXG4gICAgb25lVG9PbmU6IGJvb2xlYW47XHJcbiAgICBydW5PdXRzaWRlQW5ndWxhcjogYm9vbGVhbjtcclxuICAgIG9wdGlvbnM6IEhpZ2hjaGFydHMuT3B0aW9ucztcclxuICAgIHVwZGF0ZTogYm9vbGVhbjtcclxuICAgIHVwZGF0ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xyXG4gICAgY2hhcnRJbnN0YW5jZTogRXZlbnRFbWl0dGVyPEhpZ2hjaGFydHMuQ2hhcnQ+O1xyXG4gICAgcHJpdmF0ZSBjaGFydDtcclxuICAgIHByaXZhdGUgb3B0aW9uc1ZhbHVlO1xyXG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIF96b25lOiBOZ1pvbmUpO1xyXG4gICAgd3JhcHBlZFVwZGF0ZU9yQ3JlYXRlQ2hhcnQoKTogdm9pZDtcclxuICAgIHVwZGF0ZU9yQ3JlYXRlQ2hhcnQoKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbn1cclxuIl19