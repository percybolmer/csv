import { group, query, animateChild, animate, style } from '@angular/animations';
import { miniConfig } from './default.config';
export function sidebarClose(minWidth = miniConfig.defaultMinWidth) {
    return style({
        width: minWidth,
        visibility: 'visible',
        transform: 'none',
        overflow: 'hidden'
    });
}
export function sidebarOpen(maxWidth = miniConfig.defaultMaxWidth) {
    return style({
        width: maxWidth,
        visibility: 'visible',
    });
}
export function sidebarAnimationOpenGroup(animationDuration = miniConfig.defaultDuration, maxWidth = miniConfig.defaultMaxWidth) {
    return group([
        query('@iconAnimation', animateChild(), { optional: true }),
        query('@labelAnimation', animateChild(), { optional: true }),
        animate(`${animationDuration} ease-in-out`, sidebarOpen(maxWidth))
    ]);
}
export function sidebarAnimationCloseGroup(animationDuration = miniConfig.defaultDuration, minWidth = miniConfig.defaultMinWidth) {
    return group([
        query('@iconAnimation', animateChild(), { optional: true }),
        query('@labelAnimation', animateChild(), { optional: true }),
        animate(`${animationDuration} ease-in-out`, sidebarClose(minWidth))
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9ucy5zZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItbWF0ZXJpYWwtcmFpbC1kcmF3ZXIvIiwic291cmNlcyI6WyJsaWIvYW5pbWF0aW9ucy5zZXR0aW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBa0QsTUFBTSxxQkFBcUIsQ0FBQztBQUNqSSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFOUMsTUFBTSxVQUFVLFlBQVksQ0FBQyxXQUFtQixVQUFVLENBQUMsZUFBZTtJQUN4RSxPQUFPLEtBQUssQ0FBQztRQUNYLEtBQUssRUFBRSxRQUFRO1FBQ2YsVUFBVSxFQUFFLFNBQVM7UUFDckIsU0FBUyxFQUFFLE1BQU07UUFDakIsUUFBUSxFQUFFLFFBQVE7S0FDbkIsQ0FBQyxDQUFBO0FBQ0osQ0FBQztBQUlELE1BQU0sVUFBVSxXQUFXLENBQUMsV0FBbUIsVUFBVSxDQUFDLGVBQWU7SUFDdkUsT0FBTyxLQUFLLENBQUM7UUFDWCxLQUFLLEVBQUUsUUFBUTtRQUNmLFVBQVUsRUFBRSxTQUFTO0tBQ3RCLENBQUMsQ0FBQTtBQUNKLENBQUM7QUFHRCxNQUFNLFVBQVUseUJBQXlCLENBQ3ZDLG9CQUE0QixVQUFVLENBQUMsZUFBZSxFQUN0RCxXQUFtQixVQUFVLENBQUMsZUFBZTtJQUc3QyxPQUFPLEtBQUssQ0FBQztRQUNYLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUMzRCxLQUFLLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDNUQsT0FBTyxDQUFDLEdBQUcsaUJBQWlCLGNBQWMsRUFBRSxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDbkUsQ0FBQyxDQUFBO0FBQ0osQ0FBQztBQUVELE1BQU0sVUFBVSwwQkFBMEIsQ0FDeEMsb0JBQTRCLFVBQVUsQ0FBQyxlQUFlLEVBQ3RELFdBQW1CLFVBQVUsQ0FBQyxlQUFlO0lBRzdDLE9BQU8sS0FBSyxDQUFDO1FBQ1gsS0FBSyxDQUFDLGdCQUFnQixFQUFFLFlBQVksRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzNELEtBQUssQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUM1RCxPQUFPLENBQUMsR0FBRyxpQkFBaUIsY0FBYyxFQUFFLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUNwRSxDQUFDLENBQUE7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3JvdXAsIHF1ZXJ5LCBhbmltYXRlQ2hpbGQsIGFuaW1hdGUsIHN0eWxlLCBBbmltYXRpb25TdHlsZU1ldGFkYXRhLCBBbmltYXRpb25Hcm91cE1ldGFkYXRhIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XHJcbmltcG9ydCB7IG1pbmlDb25maWcgfSBmcm9tICcuL2RlZmF1bHQuY29uZmlnJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzaWRlYmFyQ2xvc2UobWluV2lkdGg6IHN0cmluZyA9IG1pbmlDb25maWcuZGVmYXVsdE1pbldpZHRoKTogQW5pbWF0aW9uU3R5bGVNZXRhZGF0YSB7XHJcbiAgcmV0dXJuIHN0eWxlKHtcclxuICAgIHdpZHRoOiBtaW5XaWR0aCxcclxuICAgIHZpc2liaWxpdHk6ICd2aXNpYmxlJyxcclxuICAgIHRyYW5zZm9ybTogJ25vbmUnLFxyXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nXHJcbiAgfSlcclxufVxyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2lkZWJhck9wZW4obWF4V2lkdGg6IHN0cmluZyA9IG1pbmlDb25maWcuZGVmYXVsdE1heFdpZHRoKTogQW5pbWF0aW9uU3R5bGVNZXRhZGF0YSB7XHJcbiAgcmV0dXJuIHN0eWxlKHtcclxuICAgIHdpZHRoOiBtYXhXaWR0aCxcclxuICAgIHZpc2liaWxpdHk6ICd2aXNpYmxlJyxcclxuICB9KVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNpZGViYXJBbmltYXRpb25PcGVuR3JvdXAoXHJcbiAgYW5pbWF0aW9uRHVyYXRpb246IHN0cmluZyA9IG1pbmlDb25maWcuZGVmYXVsdER1cmF0aW9uLFxyXG4gIG1heFdpZHRoOiBzdHJpbmcgPSBtaW5pQ29uZmlnLmRlZmF1bHRNYXhXaWR0aFxyXG5cclxuKTogQW5pbWF0aW9uR3JvdXBNZXRhZGF0YSB7XHJcbiAgcmV0dXJuIGdyb3VwKFtcclxuICAgIHF1ZXJ5KCdAaWNvbkFuaW1hdGlvbicsIGFuaW1hdGVDaGlsZCgpLCB7IG9wdGlvbmFsOiB0cnVlIH0pLFxyXG4gICAgcXVlcnkoJ0BsYWJlbEFuaW1hdGlvbicsIGFuaW1hdGVDaGlsZCgpLCB7IG9wdGlvbmFsOiB0cnVlIH0pLFxyXG4gICAgYW5pbWF0ZShgJHthbmltYXRpb25EdXJhdGlvbn0gZWFzZS1pbi1vdXRgLCBzaWRlYmFyT3BlbihtYXhXaWR0aCkpXHJcbiAgXSlcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNpZGViYXJBbmltYXRpb25DbG9zZUdyb3VwKFxyXG4gIGFuaW1hdGlvbkR1cmF0aW9uOiBzdHJpbmcgPSBtaW5pQ29uZmlnLmRlZmF1bHREdXJhdGlvbixcclxuICBtaW5XaWR0aDogc3RyaW5nID0gbWluaUNvbmZpZy5kZWZhdWx0TWluV2lkdGhcclxuXHJcbik6IEFuaW1hdGlvbkdyb3VwTWV0YWRhdGEge1xyXG4gIHJldHVybiBncm91cChbXHJcbiAgICBxdWVyeSgnQGljb25BbmltYXRpb24nLCBhbmltYXRlQ2hpbGQoKSwgeyBvcHRpb25hbDogdHJ1ZSB9KSxcclxuICAgIHF1ZXJ5KCdAbGFiZWxBbmltYXRpb24nLCBhbmltYXRlQ2hpbGQoKSwgeyBvcHRpb25hbDogdHJ1ZSB9KSxcclxuICAgIGFuaW1hdGUoYCR7YW5pbWF0aW9uRHVyYXRpb259IGVhc2UtaW4tb3V0YCwgc2lkZWJhckNsb3NlKG1pbldpZHRoKSlcclxuICBdKVxyXG59Il19